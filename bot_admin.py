from aiogram import Bot,Dispatcher, executor, types
from aiogram.types import KeyboardButton,ReplyKeyboardMarkup,ReplyKeyboardRemove
from bot_keyboard import kb_main,ikb
from config import TOKEN_ADMIN,monkes,HELP_COMMAND
import random

monke = random.choice(monkes)

bot = Bot(TOKEN_ADMIN)
dp = Dispatcher(bot)

async def on_startup(_): #—ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –≤ –Ω–∞—á–∞–ª–µ –≤—Å–µ–≥–¥–∞(–ø–æ—á–∏—Ç–∞—Ç—å –ø—Ä–æ –∞—Ä–≥—É–º–µ–Ω—Ç _)
    print('–Ø –±—ã–ª –∑–∞–ø—É—â–µ–Ω!!!!!')

@dp.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                            text='–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±—Ä–∞—Ç—Å—Ç–≤–æ',
                            reply_markup=kb_main)

@dp.message_handler(commands=['help'])
async def help_command(message: types.Message):
    try:
        await bot.send_message(message.from_user.id,text=HELP_COMMAND,parse_mode='HTML')
    except ZeroDivisionError:
        await bot.send_message(message.chat.id,text=HELP_COMMAND+'–ù–∞—á–Ω–∏—Ç–µ –¥–∏–∞–ª–æ–≥ —Å –Ω–∞—à–∏–º –±–æ—Ç–æ–º!',parse_mode='HTML')
        await message.delete()

@dp.message_handler(commands=['links'])
async def links_command(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                            text='–ü–æ–∫–∞ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç')

@dp.message_handler(commands=['photo'])
async def get_photo_command(message: types.Message):
    global monke #—ç—Ç–æ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ
    await message.answer('–ö–∞–∫ —Ç–µ–±–µ?',
                         reply_markup=ReplyKeyboardRemove())
    await bot.send_photo(chat_id = message.chat.id,
                        photo=monke,
                        caption='–í–æ—Ç –æ–±–µ–∑—å—è–Ω–∫–∞',
                        reply_markup=ikb)
    monke = random.choice(monkes)

@dp.message_handler(commands=['location'])
async def location_command(message: types.Message):
    await bot.send_location(chat_id = message.chat.id,
                            latitude = random.random() * 90,
                            longitude = random.random() * 180)

@dp.message_handler(text='–±–∞–Ω')
async def ban_command(message: types.Message):
    await bot.send_photo(chat_id = message.chat.id,photo=('https://sun9-64.userapi.com/impg/mS4p5IfwlNxxWoDCBxv6q3KTIimd-JdpuMw_tw/VaeuwbuY0PM.jpg?size=828x590&quality=95&sign=ad0d39b3d50be3814b435f77518aef1d&type=album'))

@dp.message_handler()
async def echo(message: types.Message):
    await bot.send_message(chat_id=message.chat.id,
                           text='–ù–µ—Ç —Ç–∞–∫–æ–≥–æ –≤–∞—Ä–∏–∞–Ω—Ç–∞!!!')

@dp.callback_query_handler()
async def photo_callback(callback: types.CallbackQuery):
    global monke # —ç—Ç–æ –æ—á–µ–Ω—å –ø–ª–æ—Ö–æ!!!!
    if callback.data == '‚ù§Ô∏è':
        await callback.answer(text='–°—É–ø–µ—Ä')
    elif callback.data == 'üëéüèæ':
        await callback.answer(text='–ù–µ —Å—É–ø–µ—Ä —Å–æ–≤—Å–µ–º –Ω–µ—Ç')
    elif callback.data == '–î—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ':
        monke=random.choice(list(filter(lambda x: x!=monke,monkes)))
        await callback.message.edit_media(types.InputMedia(media=monke,
                                                           type='photo',
                                                           caption='–í–æ—Ç –¥—Ä—É–≥–∞—è –æ–±–µ–∑—å—è–Ω–∫–∞'),
                                          reply_markup=ikb)
        await callback.answer()
    else :
        await callback.message.answer(text = '–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                                      reply_markup=kb_main)
        await callback.message.delete()
        await callback.answer()


if __name__ == '__main__':
    executor.start_polling(dp,on_startup=on_startup, skip_updates=True)